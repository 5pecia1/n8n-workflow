(()=>{"use strict";var e={924:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DEFAULT_RANGE=t.TIME_ZONE=t.NOTION_DATE_PROPERTY_NAME=t.NOTION_GCAL_ID_PROPERTY_NAME=t.ADDED_TO_NOTION_MARK=t.ADD_TO_NOTION_MARK=t.ONE_DAY_UNIX_TIME=void 0;const n=$node["Set Environments"].parameter.values.string,a=$node["Set Environments"].parameter.values.number,r={string:n.reduce(((e,{name:t,value:n})=>Object.assign(e,{[t]:n})),{}),number:a.reduce(((e,{name:t,value:n})=>Object.assign(e,{[t]:n})),{})};$node["Set Environments"].parameter.values,t.ONE_DAY_UNIX_TIME=864e5,t.ADD_TO_NOTION_MARK=r.string["add to notion mark in gcal"].split(","),t.ADDED_TO_NOTION_MARK=r.string["notion mark in gcal"],t.NOTION_GCAL_ID_PROPERTY_NAME=r.string["gcal id property in notion"],t.NOTION_DATE_PROPERTY_NAME=r.string["notion date property"],t.TIME_ZONE=r.string["time zone"]||"Asia/Seoul",t.DEFAULT_RANGE=60*(r.number["default calendar range(min)"]||30)*1e3},825:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.makeEventState=void 0;const a=n(924),r=n(103);t.makeEventState=function(e){const t=e.start.dateTime||e.start.date,n=e.end.dateTime||e.end.date,i=Date.parse(t.includes("T")?t:t+`T00:00:00${r.getTimeZone()}`),s=Date.parse(n.includes("T")?n:n+`T00:00:00${r.getTimeZone()}`),o=!!e.start.date;return{eventStart:i,eventEnd:s,isEventAllDay:o,isEventOneDayAllDay:o&&s-i===a.ONE_DAY_UNIX_TIME}}},207:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getNotionNameProperty=t.getNotionGCalIdProperty=t.getNotionDateProperty=t.makePageState=void 0;const a=n(924),r=n(103);function i(e){return e.properties[a.NOTION_DATE_PROPERTY_NAME]}t.makePageState=function(e){const t=i(e).date.start,n=i(e).date.end?i(e).date.end:null,a=Date.parse(t.includes("T")?t:t+`T00:00:00${r.getTimeZone()}`),s=n?Date.parse(n.includes("T")?n:n+`T00:00:00${r.getTimeZone()}`):null,o=!t.includes("T");return{pageStart:a,pageEnd:s,isPageAllDay:o,isPageOneDayAllDAy:o&&null===s}},t.getNotionDateProperty=i,t.getNotionGCalIdProperty=function(e){return e.properties[a.NOTION_GCAL_ID_PROPERTY_NAME]},t.getNotionNameProperty=function(e){return e.properties.Name}},103:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.makeIso8601WithTZ=t.getTimeZone=t.getTImeZoneOffset=void 0;const a=n(924);function r(){const e=Intl.DateTimeFormat([],{timeZone:a.TIME_ZONE,timeZoneName:"short"}).format(new Date).split(" ")[1].slice(3);let t=60*parseInt(e.split(":")[0]);return e.includes(":")&&(t+=parseInt(e.split(":")[1])),t}function i(){const e=r();let t=Math.abs(e/60),n=Math.abs(e%60),a="Z";return t<10&&(t="0"+t),n<10&&(n="0"+n),e>0?a="+"+t+":"+n:e<0&&(a="-"+t+":"+n),a}t.getTImeZoneOffset=r,t.getTimeZone=i,t.makeIso8601WithTZ=function(e){const t=r();t>0?e+=60*Math.abs(t)*1e3:t<0&&(e-=60*Math.abs(t)*1e3);const n=new Date(e).toISOString();return n.substring(0,n.length-5)+i()}},147:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.makeCalendarEventDate=t.makeNotionPageDate=t.makeEventDescription=t.makePageId=void 0;const a=n(924),r=n(825),i=n(207),s=n(103);t.makePageId=function(e){const t=e.description;let n;return n=t.includes("\n")?t.substring(0,t.indexOf("\n")):t.substring(0,t.indexOf("<br>")),n.substring(a.ADDED_TO_NOTION_MARK.length)},t.makeEventDescription=function(e){return`${a.ADDED_TO_NOTION_MARK}${e.id}\nhttps://notion.so/${e.id.replace(/-/g,"")}\n`},t.makeNotionPageDate=function(e){const{eventStart:t,eventEnd:n,isEventAllDay:i,isEventOneDayAllDay:o}=r.makeEventState(e),d=s.makeIso8601WithTZ(t),_=o?null:s.makeIso8601WithTZ(i?n-a.ONE_DAY_UNIX_TIME:n);return{is_all_day:i,timezone:a.TIME_ZONE,start:i?d.substring(0,d.indexOf("T")):d,end:null==_?null:i?_.substring(0,_.indexOf("T")):_}},t.makeCalendarEventDate=function(e){const{pageStart:t,pageEnd:n,isPageAllDay:r}=i.makePageState(e),o=s.makeIso8601WithTZ(t),d=r?s.makeIso8601WithTZ((n||t)+a.ONE_DAY_UNIX_TIME):s.makeIso8601WithTZ(n||t+a.DEFAULT_RANGE);return{date:{start:r?o.substring(0,o.indexOf("T")):o,end:r?d.substring(0,d.indexOf("T")):d,is_all_day:r,timezone:a.TIME_ZONE}}}}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,n),i.exports}var a={};for(var r in(()=>{var e=a;Object.defineProperty(e,"__esModule",{value:!0}),e.main=void 0;const t=n(924),r=n(207),i=n(825),s=n(147);e.main=function(e){let n=e[0].json.calendar,a=e[1].json.notion;Object.keys(n[0]).length||(n=[]),Object.keys(a[0]).length||(a=[]);const o={create_events:[],create_pages:[],delete_events:[],delete_pages:[],update_events:[],update_pages:[]},d=a.filter((e=>e.properties&&e.properties[t.NOTION_DATE_PROPERTY_NAME])),_=[],l=new Map;n.forEach((e=>{for(const n of t.ADD_TO_NOTION_MARK)if(e.summary&&e.summary.startsWith(n)){_.push(e),e.summary=e.summary.substring(n.length);break}e.description&&e.description.startsWith(t.ADDED_TO_NOTION_MARK)&&l.set(e.id,e)}));for(const e of d){const{pageStart:n,pageEnd:a,isPageOneDayAllDAy:d}=r.makePageState(e),_=r.getNotionGCalIdProperty(e).rich_text[0];if(_){const u=_.plain_text,p=l.get(u);if(p){const{eventStart:_,eventEnd:m,isEventOneDayAllDay:c}=i.makeEventState(p),O=s.makePageId(p);if(l.delete(u),n==_&&(d&&c||!d&&a==m||null==a&&!d&&n+t.DEFAULT_RANGE==m));else if(Date.parse(e.last_edited_time)>Date.parse(p.updated)){const t=r.getNotionNameProperty(e).title[0]?r.getNotionNameProperty(e).title[0].text.content:"";o.update_events.push(Object.assign({id:r.getNotionGCalIdProperty(e).rich_text[0].plain_text,summary:t},s.makeCalendarEventDate(e)))}else o.update_pages.push({id:O,date:s.makeNotionPageDate(p),name:r.getNotionNameProperty(e).title[0].text.content})}else o.delete_pages.push({id:e.id})}else o.create_events.push(Object.assign({page_id:e.id,description:s.makeEventDescription(e),summary:r.getNotionNameProperty(e).title[0].text.content},s.makeCalendarEventDate(e)))}for(const[e,t]of Array.from(l))o.delete_events.push({id:t.id});for(const e of Array.from(_))o.create_pages.push({name:e.summary,gcal_id:e.id,event_description:e.description||"",date:s.makeNotionPageDate(e)});return[{json:o}]}})(),a)this[r]=a[r];a.__esModule&&Object.defineProperty(this,"__esModule",{value:!0})})();return main(items)
